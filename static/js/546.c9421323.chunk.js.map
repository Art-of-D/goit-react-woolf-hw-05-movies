{"version":3,"file":"static/js/546.c9421323.chunk.js","mappings":"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","sources":["api/films/getFilmsData.js","webpack://goit-react-woolf-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","webpack://goit-react-woolf-hw-05-movies/./src/components/CastElement/CastElement.module.css?10dc","components/CastElement/CastElement.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYWZlODRhOGFiYmRkODI0MTg5MTI1Zjk4MjA3NmU0NyIsInN1YiI6IjY1ZTMyM2MxYzk5ODI2MDE3YjYxNjBlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lQVgdN6GSUDLR61rhVNwJdpW6ifJhBnJqsPP1xNmZ5Y';\n\nexport const getFilms = async () => {\n  try {\n    const trends = await axios.get('/trending/all/day');\n    return trends.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmByName = async name => {\n  try {\n    const filmByName = await axios.get('/search/movie', {\n      params: { query: name },\n    });\n    return filmByName.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmById = async movieId => {\n  try {\n    const film = await axios.get(`/movie/${movieId}`);\n    return formatDataById(film.data);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmReviews = async movieId => {\n  try {\n    const filmReviews = await axios.get(`/movie/${movieId}/reviews`);\n    return filmReviews.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmCast = async movieId => {\n  try {\n    const filmCast = await axios.get(`/movie/${movieId}/credits`);\n    return filmCast.data.cast;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst formatDataById = ({\n  poster_path,\n  title,\n  release_date,\n  vote_average,\n  overview,\n  genres,\n}) => {\n  return {\n    poster: 'https://image.tmdb.org/t/p/w500' + poster_path,\n    title: title,\n    releaseDate: release_date,\n    voteAverage: vote_average,\n    overview: overview,\n    genres: genres,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"Cast_CastList__2oQ+0\"};","// extracted by mini-css-extract-plugin\nexport default {\"CastElementImg\":\"CastElement_CastElementImg__WyQS+\"};","import styled from './CastElement.module.css';\n\nexport const CastElement = ({ cast }) => {\n  return (\n    <>\n      {cast.map(({ id, name, character, profile_path: profilePath }) => {\n        return (\n          <li key={id} className={styled.CastElement}>\n            <img\n              className={styled.CastElementImg}\n              src={\n                profilePath\n                  ? 'https://image.tmdb.org/t/p/w500' + profilePath\n                  : process.env.PUBLIC_URL + '/unknown-person.jpg'\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n","import styled from './Cast.module.css';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmCast } from 'api/films/getFilmsData';\nimport { CastElement } from 'components/CastElement/CastElement';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const reviewsData = await getFilmCast(movieId);\n        setCast(reviewsData);\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul className={styled.CastList}>\n        {cast.length > 0 && <CastElement cast={cast} />}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","trends","_context","prev","next","sent","abrupt","data","t0","console","log","stop","apply","arguments","getFilmByName","_ref2","_callee2","name","filmByName","_context2","params","query","_x","getFilmById","_ref3","_callee3","movieId","film","_context3","concat","formatDataById","_x2","getFilmReviews","_ref4","_callee4","filmReviews","_context4","_x3","getFilmCast","_ref5","_callee5","filmCast","_context5","cast","_x4","_ref6","poster","poster_path","title","releaseDate","release_date","voteAverage","vote_average","overview","genres","CastElement","_jsx","_Fragment","children","map","id","character","profilePath","profile_path","_jsxs","className","styled","src","process","alt","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","fetchCast","reviewsData","error","length"],"sourceRoot":""}