{"version":3,"file":"static/js/135.41c2df74.chunk.js","mappings":"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","sources":["api/films/getFilmsData.js","webpack://goit-react-woolf-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYWZlODRhOGFiYmRkODI0MTg5MTI1Zjk4MjA3NmU0NyIsInN1YiI6IjY1ZTMyM2MxYzk5ODI2MDE3YjYxNjBlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lQVgdN6GSUDLR61rhVNwJdpW6ifJhBnJqsPP1xNmZ5Y';\n\nexport const getFilms = async () => {\n  try {\n    const trends = await axios.get('/trending/all/day');\n    return trends.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmByName = async name => {\n  try {\n    const filmByName = await axios.get('/search/movie', {\n      params: { query: name },\n    });\n    return filmByName.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmById = async movieId => {\n  try {\n    const film = await axios.get(`/movie/${movieId}`);\n    return film.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmReviews = async movieId => {\n  try {\n    const filmReviews = await axios.get(`/movie/${movieId}/reviews`);\n    return filmReviews.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getFilmCast = async movieId => {\n  try {\n    const filmCast = await axios.get(`/movie/${movieId}/credits`);\n    return filmCast.data.cast;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"BackButton\":\"MovieDetails_BackButton__on4hH\",\"BackButtonArrow\":\"MovieDetails_BackButtonArrow__lnniG\",\"FilmWrapper\":\"MovieDetails_FilmWrapper__ULWr9\",\"FilmWrapperDescription\":\"MovieDetails_FilmWrapperDescription__7tUPn\",\"MovieDetailsImg\":\"MovieDetails_MovieDetailsImg__IYz8F\",\"MovieDetailsAddInfo\":\"MovieDetails_MovieDetailsAddInfo__-O3rX\",\"MovieDetailsLink\":\"MovieDetails_MovieDetailsLink__heGFu\"};","import styled from './MovieDetails.module.css';\nimport { useState, useEffect } from 'react';\nimport {\n  Link,\n  useLocation,\n  useParams,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { getFilmById } from 'api/films/getFilmsData';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState(null);\n  const location = useLocation();\n\n  const calculatePercentage = float => {\n    return Math.floor((float % 10) * 10);\n  };\n\n  const calculateYear = date => {\n    return new Date(date).getFullYear();\n  };\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const filmData = await getFilmById(movieId);\n        setFilm({\n          poster: 'https://image.tmdb.org/t/p/w500' + filmData.poster_path,\n          title: filmData.title,\n          releaseDate: filmData.release_date,\n          voteAverage: filmData.vote_average,\n          overview: filmData.overview,\n          genres: filmData.genres,\n        });\n      } catch (error) {\n        console.error('Error fetching film:', error);\n      }\n    };\n    fetchFilm();\n  }, [movieId]);\n\n  if (!film) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Link to={location.state?.from || '/'} className={styled.BackButton}>\n        <svg\n          className={styled.BackButtonArrow}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        >\n          <path d=\"M19 12H5M12 19l-7-7 7-7\" />\n        </svg>\n        Go back\n      </Link>\n      <div className={styled.FilmWrapper}>\n        <img\n          className={styled.MovieDetailsImg}\n          src={film.poster}\n          alt={film.title + 'poster'}\n        />\n        <div className={styled.FilmWrapperDescription}>\n          <h2>\n            {film.title} ({calculateYear(film.releaseDate)})\n          </h2>\n          <p>User score: {calculatePercentage(film.voteAverage)}%</p>\n          <h3>Overview</h3>\n          <p>{film.overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {film.genres.map(({ id, name }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className={styled.MovieDetailsAddInfo}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink className={styled.MovieDetailsLink} to={'reviews'}>\n              Reviews\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className={styled.MovieDetailsLink} to={'cast'}>\n              Cast\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","trends","_context","prev","next","sent","abrupt","data","t0","console","log","stop","apply","arguments","getFilmByName","_ref2","_callee2","name","filmByName","_context2","params","query","_x","getFilmById","_ref3","_callee3","movieId","film","_context3","concat","_x2","getFilmReviews","_ref4","_callee4","filmReviews","_context4","_x3","getFilmCast","_ref5","_callee5","filmCast","_context5","cast","_x4","_location$state","float","date","useParams","_useState","useState","_useState2","_slicedToArray","setFilm","location","useLocation","useEffect","fetchFilm","filmData","poster","poster_path","title","releaseDate","release_date","voteAverage","vote_average","overview","genres","error","_jsxs","_Fragment","children","Link","to","state","from","className","styled","_jsx","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","src","alt","Date","getFullYear","Math","floor","map","id","NavLink","Outlet"],"sourceRoot":""}